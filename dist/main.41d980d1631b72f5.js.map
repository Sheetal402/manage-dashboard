{"version":3,"file":"main.41d980d1631b72f5.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/auth/auth.service.ts","./src/app/auth/token.interceptor.ts","./src/app/layouts/admin-layout/admin-layout.component.ts","./src/app/layouts/admin-layout/admin-layout.component.html","./src/app/pages/editcomment/editcomment.component.ts","./src/app/pages/editcomment/editcomment.component.html","./src/app/pages/icons/icons.component.ts","./src/app/pages/icons/icons.component.html","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/popup/popup.component.ts","./src/app/pages/popup/popup.component.html","./src/app/shared/fixedplugin/fixedplugin.component.ts","./src/app/shared/fixedplugin/fixedplugin.component.html","./src/app/shared/fixedplugin/fixedplugin.module.ts","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/app/shared/footer/footer.module.ts","./src/app/shared/navbar/navbar.component.ts","./src/app/shared/navbar/navbar.component.html","./src/app/shared/navbar/navbar.module.ts","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/sidebar/sidebar.module.ts","./src/app/task.service.ts","./src/app/web.service.ts","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent{}\n","<router-outlet></router-outlet>\n","import { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ToastrModule } from \"ngx-toastr\";\n\nimport { SidebarModule } from './sidebar/sidebar.module';\nimport { FooterModule } from './shared/footer/footer.module';\nimport { NavbarModule} from './shared/navbar/navbar.module';\nimport { FixedPluginModule} from './shared/fixedplugin/fixedplugin.module';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutes } from './app.routing';\n\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\n\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { WebService } from \"./web.service\";\nimport { TaskService } from \"./task.service\";\nimport { MatTableModule} from \"@angular/material/table\"\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { PopupComponent } from \"./pages/popup/popup.component\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { LoginComponent } from \"./pages/login/login.component\";\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { TokenInterceptor } from \"./auth/token.interceptor\";\nimport { AuthService } from \"./auth/auth.service\";\nimport { EditcommentComponent } from './pages/editcomment/editcomment.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AdminLayoutComponent,\n    PopupComponent,\n    LoginComponent,\n    WelcomeComponent,\n    EditcommentComponent\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    RouterModule.forRoot(AppRoutes,{\n      useHash: true\n    }),\n    SidebarModule,\n    NavbarModule,\n    ToastrModule.forRoot(),\n    FooterModule,\n    FixedPluginModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatDialogModule,\n    MatButtonModule\n  ],\n  providers: [\n              WebService, \n              TaskService,\n              AuthService,\n              {provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true}\n             ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\n\nimport { AdminLayoutComponent } from './layouts/admin-layout/admin-layout.component';\nimport { IconsComponent } from './pages/icons/icons.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { UserComponent } from './pages/user/user.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\n\nexport const AppRoutes: Routes = [\n  {\n    path: '',\n    component:WelcomeComponent,\n    pathMatch: 'full',\n  },\n  {\n    path: 'login',\n    component:LoginComponent,\n    pathMatch: 'full',\n  },\n  // {\n  //   path: 'login/user',\n  //   component:UserComponent,\n  //   pathMatch: 'full',\n  // },\n  {\n    path: 'register',\n    component:IconsComponent,\n    pathMatch: 'full',\n  },\n  {\n    path: '',\n    component: AdminLayoutComponent,\n    children: [\n        {\n      path: '',\n      loadChildren: () => import('./layouts/admin-layout/admin-layout.module').then(x => x.AdminLayoutModule)\n  }]},\n  {\n    path: '**',\n    redirectTo: 'welcome'\n  }\n]\n","import { Injectable } from '@angular/core';\n// import decode from 'jwt-decode';\n// import { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable(\n  // {\n  // providedIn: 'root'\n  // }\n)\nexport class AuthService {\n\n  constructor() { }\n\n  public getToken(): string {\n    // console.log(\"**--**\",localStorage.getItem('token'));\n    return localStorage.getItem('token');\n  }\n\n  // public isAuthenticated():boolean{\n  //   //get the token\n  //   const token = this.getToken();\n  //   //return a boolean reflecting whether or not the token is expired\n  //   console.log(\"!!!\",\"token = \",token);\n  //   console.log(\"@@@\",this.jwtHelper.isTokenExpired(token)); \n  //   return this.jwtHelper.isTokenExpired(token);\n  // }\n}\n\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { catchError, Observable, throwError } from 'rxjs';\nimport { AuthService } from './auth.service';\n// import { Http2ServerResponse } from 'http2';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(public auth: AuthService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const authToken = this.auth.getToken();\n    // console.log('$--$',\"auhToken from interceptor = \",authToken);\n    \n    if(authToken){\n      //original \n      request = request.clone({\n        setHeaders : { Authorization: `${authToken}` }\n        // setHeaders : { Authorization: `Bearer ${authToken}` }\n        // setHeaders : { Authorization: `Bearer ${this.auth.getToken()}` }\n        // headers: request.headers.set('Authorization', authToken)\n      });\n    }\n    console.log(5879,'request = ',request);\n    return next.handle(request).pipe(\n      catchError((err) => {\n        // if(err instanceof HttpErrorResponse){\n        //   if(err.status === 401){\n        //     console.log(\"&&& error 401 = \");\n        //   }\n        // }\n        return throwError(err);\n      })\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-admin-layout',\n  templateUrl: './admin-layout.component.html',\n  styleUrls: ['./admin-layout.component.scss']\n})\nexport class AdminLayoutComponent implements OnInit {\n\n  ngOnInit() { }\n}\n","<div class=\"wrapper\">\n    <div class=\"sidebar\" data-color=\"white\" data-active-color=\"danger\">\n        <sidebar-cmp></sidebar-cmp>\n    </div>\n    <div class=\"main-panel\">\n        <navbar-cmp></navbar-cmp>\n        <div class=\"content\">\n            <router-outlet></router-outlet>\n        </div>\n        <footer-cmp></footer-cmp>\n    </div>\n</div>\n<fixedplugin-cmp></fixedplugin-cmp>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog'; \nimport { TaskService } from 'app/task.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-editcomment',\n  templateUrl: './editcomment.component.html',\n  styleUrls: ['./editcomment.component.css']\n})\nexport class EditcommentComponent implements OnInit {\n  updateCommentForm : FormGroup;\n\n  constructor(@Inject (MAT_DIALOG_DATA) public data : any,\n              private taskService: TaskService,\n              public dialogRef: MatDialogRef<EditcommentComponent>,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.initForm();\n    // console.log(2334,\"data = \",this.data);\n    this.data.content = this.data.content.replace(/<br\\s*[\\/]?>/gi, \"\\n\");\n    // console.log(2334,\"data = \",this.data);\n    this.updateCommentForm.patchValue(this.data);\n  }\n\n  initForm(){\n    this.updateCommentForm = new FormGroup({\n      content : new FormControl(\"\")\n    })\n  }\n\n  onUpdate(item){\n    // console.log(2334,\"item = \",item);\n    item.content = item.content.replace(/(?:\\r\\n|\\r|\\n)/g, '<br/>');\n    // console.log(2334,\"item = \",item);\n    this.taskService.updateComments(this.data._id, item.content);\n    this.dialogRef.close();\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<form [formGroup]=\"updateCommentForm\" (ngSubmit)=\"onUpdate(updateCommentForm.value)\">\n<h1 mat-dialog-title>Enter new comment here!!!</h1>\n<!-- <mat-dialog-content><input type=\"text\" formControlName=\"content\"></mat-dialog-content> -->\n<mat-dialog-content><textarea type=\"text\" formControlName=\"content\" [innerHTML]=\"data.content\"></textarea></mat-dialog-content>\n<!-- [innerHTML]=\"data.content\" -->\n<div mat-dialog-actions>\n  <button type=\"submit\" mat-button color=\"primary\">Update</button>\n  <button mat-button (click)=\"onNoClick()\" color=\"primary\">Cancel</button>\n</div>\n</form>","import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Users from 'app/models/users';\nimport { TaskService } from 'app/task.service';\nimport { find } from 'rxjs';\n\n@Component({\n    selector: 'icons-cmp',\n    moduleId: module.id,\n    templateUrl: 'icons.component.html'\n})\n\nexport class IconsComponent{\n\n    profilepic: any;\n    public registrationForm : FormGroup;\n    \n    receivedData: Users[] = [];\n\n    constructor(private taskService: TaskService,\n                private router: Router) {\n    }\n\n    public async ngOnInit() {\n        console.log(12,\"inside register component\");\n        this.initRegistrationForm();\n    }\n\n    initRegistrationForm() {\n        this.registrationForm = new FormGroup({\n            fname: new FormControl(\"\",[Validators.required, Validators.minLength(3), Validators.maxLength(50), Validators.pattern('[a-zA-Z][a-zA-Z ]+')]),\n            lname: new FormControl(\"\",[Validators.required, Validators.minLength(1), Validators.maxLength(50), Validators.pattern('[a-zA-Z][a-zA-Z ]+')]),\n            address: new FormControl(\"\",[Validators.required, Validators.minLength(5), Validators.maxLength(255)]),\n            profilepic: new FormControl(\"\"),\n            // contact: new FormControl(\"\",[Validators.required, Validators.maxLength(10), Validators.pattern('^[789]\\d{9,9}$')]),\n            // contact: new FormControl(\"\",[Validators.required, Validators.minLength(10), Validators.maxLength(10)]),\n            contact: new FormControl(\"\",[Validators.required, Validators.minLength(10)]),\n            email: new FormControl(\"\",[Validators.required, Validators.minLength(5), Validators.maxLength(255), Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$')]),\n            password: new FormControl(\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(1024), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$')]),\n            cpassword: new FormControl(\"\",[Validators.required, Validators.minLength(8), Validators.maxLength(1024), Validators.pattern('^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{8,12}$')])\n        })\n    }\n\n    onFileSelected(event:any) {\n        this.profilepic = event.target.files[0];\n        console.log(\"profile pic = \", this.profilepic);\n    }\n\n    submit(data) {\n      console.log(123,\"res b4 api call = \", data);\n      const formdata = new FormData();\n       formdata.append('fname',data.fname);\n       formdata.append('lname',data.lname);\n       formdata.append('address',data.address);\n       formdata.append('profilepic',this.profilepic);\n       formdata.append('contact',data.contact);\n       formdata.append('email',data.email);\n       formdata.append('password',data.password);\n       formdata.append('cpassword',data.cpassword);\n       console.log(\"%%form data = \",formdata);\n\n    //    let res = this.taskService.createUsers(formdata.get('fname'),formdata.get(lname),formdata[0].address,formdata[0].profilepic,formdata[0].contact,formdata[0].email,formdata[0].password,formdata[0].cpassword);\n    \n        let res = this.taskService.createUsers(formdata);\n       console.log(333,\"this is res\", res);\n        // this.router.navigateByUrl('/login');\n    }\n    \n}\n","<div class=\"row\" style=\"justify-content: center;\">\n  <div class=\"col-md-8\">\n    <div class=\"card card-user\">\n      <div class=\"card-header\">\n        <h5 class=\"card-title\">Register Student Profile</h5>\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"registrationForm\" (ngSubmit)=\"submit(registrationForm.value)\" enctype=\"multipart/form-data\">\n          <div class=\"row\">\n            <div class=\"col-md-6 pr-1\">\n              <div class=\"form-group\">\n                <label>First Name*</label>\n                <input type=\"text\" formControlName=\"fname\" id=\"fname\" autofocus class=\"form-control\" placeholder=\"First Name\"\n                  value=\"\">\n              </div>\n              <div *ngIf=\"registrationForm?.controls?.fname?.invalid && registrationForm?.controls?.fname?.touched\">\n                <small *ngIf=\"registrationForm?.controls?.fname?.errors.required\">First Name Required</small>\n                <small *ngIf=\"registrationForm?.controls?.fname?.errors.pattern\">Invalid First Name</small>\n              </div>\n            </div>\n            <div class=\"col-md-6 pl-1\">\n              <div class=\"form-group\">\n                <label>Last Name*</label>\n                <input type=\"text\" formControlName=\"lname\" id=\"lname\" class=\"form-control\" placeholder=\"Last Name\"\n                  value=\"\">\n              </div>\n              <div *ngIf=\"registrationForm?.controls?.lname?.invalid && registrationForm?.controls?.lname?.touched\">\n                <small *ngIf=\"registrationForm?.controls?.lname?.errors.required\">Last Name Required</small>\n                <small *ngIf=\"registrationForm?.controls?.lname?.errors.pattern\">Invalid Last Name</small>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label>Address*</label>\n                <input type=\"text\" formControlName=\"address\" id=\"address\" class=\"form-control\"\n                  placeholder=\"Home Address\" value=\"\">\n              </div>\n              <div *ngIf=\"registrationForm.controls.address.invalid && registrationForm.controls.address.touched\">\n                <small *ngIf=\"registrationForm.controls.address.errors.required\">Address Required</small>\n                <small *ngIf=\"registrationForm.controls.address.errors.pattern\">Invalid Address</small>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label>Profile Picture*</label>\n                <input type=\"file\" formControlName=\"profilepic\" (change)=\"onFileSelected($event)\" id=\"profilepic\" class=\"form-control\"\n                  placeholder=\"Profile Picture\" value=\"\">\n                <!-- <button class=\"btn btn-success\" (click)=\"onUpload()\">Upload</button> -->\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-4 pr-1\">\n              <div class=\"form-group\">\n                <label>Contact Number*</label>\n                <input type=\"tel\" formControlName=\"contact\" id=\"contact\" class=\"form-control\" placeholder=\"Contact Number*\"\n                  value=\"\">\n              </div>\n              <div *ngIf=\"registrationForm?.controls?.contact?.invalid && registrationForm?.controls?.contact?.touched\">\n                <small *ngIf=\"registrationForm.controls.contact.errors.required\">Contact Required</small>\n                <!-- <small *ngIf=\"registrationForm?.contact?.contact?.errors?.pattern\">Invalid Contact</small> -->\n              </div>\n            </div>\n            <div class=\"col-md-4 px-1\">\n              <div class=\"form-group\">\n                <label for=\"exampleInputEmail1\">Email address*</label>\n                <input type=\"email\" formControlName=\"email\" id=\"email\" class=\"form-control\" placeholder=\"Email*\" value=\"\">\n              </div>\n              <div *ngIf=\"registrationForm.controls.email.invalid &&\n                          registrationForm.controls.email.touched\">\n                <small *ngIf=\"registrationForm.controls.email.errors.required\">Email Required</small>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-6 pr-1\">\n              <div class=\"form-group\">\n                <label>Password*</label>\n                <input type=\"password\" formControlName=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\" value=\"\">\n              </div>\n              <div *ngIf=\"registrationForm.controls.password.invalid &&\n                          registrationForm.controls.password.touched\">\n                <small *ngIf=\"registrationForm.controls.password.errors.required\">Password Required</small>\n                <small *ngIf=\"registrationForm.controls.password.errors.pattern\">Invalid Password</small>\n              </div>\n            </div>\n            <div class=\"col-md-6 pl-1\">\n              <div class=\"form-group\">\n                <label>Confirm Password*</label>\n                <input type=\"password\" formControlName=\"cpassword\" id=\"cpassword\" class=\"form-control\"\n                  placeholder=\"Confirm Password\" value=\"\">\n              </div>\n              <div *ngIf=\"registrationForm.controls.cpassword.invalid &&\n                          registrationForm.controls.cpassword.touched\">\n                <small *ngIf=\"registrationForm.controls.cpassword.errors.required\">Confirm Password Required</small>\n                <small *ngIf=\"(registrationForm.controls.cpassword.errors.pattern)||(registrationForm.controls.cpassword.value !== registrationForm.controls.password.value)\">Invalid Password/password doesn't match</small>\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"update ml-auto mr-auto\">\n              <button type=\"submit\" class=\"btn btn-primary btn-round\" [disabled]=\"registrationForm.invalid\" >Register</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport Users from 'app/models/users';\nimport { TaskService } from 'app/task.service';\nimport { Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PopupComponent } from '../popup/popup.component';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as _ from 'lodash';\n// import { HttpClient } from '@angular/common/http';\n// import { AuthService } from 'app/auth/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  response : any;\n  userData: Users[] = [];\n  loginForm : FormGroup;\n  constructor(private taskService: TaskService,\n              private router: Router,\n              public dialog: MatDialog){\n              // public http: HttpClient) { \n          //       this.taskService.getUsers()\n          // .subscribe((data: Users[]) => {console.log(888,\"data = \",data);this.userData = data;});\n              }\n\n  ngOnInit(): void {\n    console.log(13,\"inside login component\");\n    \n    this.loginForm = new FormGroup({\n      email: new FormControl(\"\",[Validators.required]),\n      password: new FormControl(\"\",[Validators.required]),\n    });\n  }\n  \n  login(data) {\n      this.getRes(data) \n  } \n\n  async getRes(data) {\n    //try{\n      await this.taskService.loginUser(data.email,data.password).subscribe(\n        res => {\n          console.log(111,res.token);\n          localStorage.setItem(\"token\",res.token)\n        },\n        err => {\n            window.alert(err.error);\n            console.warn(\"eroor login\",err);\n        },\n        () => {\n          this.router.navigateByUrl('/dashboard');\n        }\n      );\n        \n\n\n      //);\n    //  console.log(res);\n    // return this.taskService.loginUser(data.email,data.password)\n    //     .then((res) => {\n    //       console.log(89645,\"Res in getRes function= \",res);\n    //       // this.router.navigateByUrl('/dashboard');\n    //     })\n    //     .catch((error) => {\n    //       console.log(\"Invalid email or password\");\n    //       window.alert(error);\n    //     }); \n    //   }\n    //   catch(e) {\n    //     console.log \n    //   }\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(PopupComponent);\n  }\n\n}\n","<div class=\"row\" style=\"justify-content: center;\">\n  <div class=\"col-md-4\">\n    <div class=\"card card-user\">\n      <div class=\"card-header\">\n        <h5 class=\"card-title\">Login User</h5>\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"login(loginForm.value)\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label>Email</label>\n                <input type=\"email\" formControlName=\"email\" class=\"form-control\" placeholder=\"Email\" value=\"\" autofocus>\n                <!-- <input type=\"text\" formControlName=\"address\" id=\"address\" class=\"form-control\"\n                  placeholder=\"Home Address\" value=\"\"> -->\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <div class=\"form-group\">\n                <label>Password</label>\n                <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\" value=\"\">\n                <!-- <input type=\"text\" formControlName=\"address\" id=\"address\" class=\"form-control\"\n                  placeholder=\"Home Address\" value=\"\"> -->\n              </div>\n            </div>\n          </div>\n          <div class=\"row text-center\">\n            <div class=\"col-md-12\">\n              <div class=\"form-group\">\n                <button type=\"submit\" class=\"btn btn-primary btn-round\">Login</button>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { TaskService } from 'app/task.service';\nimport { CommentComponent } from '../comment/comment.component';\n\n@Component({\n  selector: 'app-popup',\n  templateUrl: './popup.component.html',\n  styleUrls: ['./popup.component.css']\n})\nexport class PopupComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any,\n              public dialogRef: MatDialogRef<PopupComponent>,\n              private taskService: TaskService,\n              private router: Router\n              ) { }\n\n  ngOnInit(): void {\n\n  }\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  onOk() {\n    this.taskService.deleteComments(this.data._id);\n    this.dialogRef.close();\n  }\n}\n","<h1 mat-dialog-title>{{data.content}} is deleted!!!</h1>\n<mat-dialog-content>Are you sure you want to delete?</mat-dialog-content>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onOk()\" color=\"primary\">ok</button>\n  <button mat-button (click)=\"onClose()\" color=\"primary\">Close</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    moduleId: module.id,\n    selector: 'fixedplugin-cmp',\n    templateUrl: 'fixedplugin.component.html'\n})\n\nexport class FixedPluginComponent implements OnInit{\n\n  public sidebarColor: string = \"white\";\n  public sidebarActiveColor: string = \"danger\";\n\n  public state: boolean = true;\n\n  changeSidebarColor(color){\n    var sidebar = <HTMLElement>document.querySelector('.sidebar');\n\n    this.sidebarColor = color;\n    if(sidebar != undefined){\n        sidebar.setAttribute('data-color',color);\n    }\n  }\n  changeSidebarActiveColor(color){\n    var sidebar = <HTMLElement>document.querySelector('.sidebar');\n    this.sidebarActiveColor = color;\n    if(sidebar != undefined){\n        sidebar.setAttribute('data-active-color',color);\n    }\n  }\n  ngOnInit(){}\n}\n","<div class=\"fixed-plugin\">\n    <div class=\"show-dropdown\" ngbDropdown>\n        <a href=\"javascript:void(0)\" ngbDropdownToggle id=\"dropdownConfig\">\n          <i class=\"fa fa-cog fa-2x\"> </i>\n        </a>\n        <ul class=\"\" ngbDropdownMenu aria-labelledby=\"dropdownConfig\">\n            <li class=\"header-title\">Sidebar Background</li>\n            <li class=\"adjustments-line text-center\">\n                <a href=\"javascript:void(0)\" class=\"switch-trigger background-color\">\n                    <span class=\"badge filter badge-light active\" [ngClass]=\"{'active':sidebarColor==='white'}\" (click)=\"changeSidebarColor('white')\"></span>\n                    <span class=\"badge filter badge-dark\" [ngClass]=\"{'active':sidebarColor==='black'}\" (click)=\"changeSidebarColor('black')\"></span>\n                </a>\n            </li>\n\n\t          <li class=\"header-title\">Sidebar Active Color</li>\n            <li class=\"adjustments-line text-center\">\n                <a href=\"javascript:void(0)\" class=\"switch-trigger active-color\">\n                    <span class=\"badge filter badge-primary\" [ngClass]=\"{'active':sidebarActiveColor==='primary'}\" (click)=\"changeSidebarActiveColor('primary')\"></span>\n                    <span class=\"badge filter badge-info\" [ngClass]=\"{'active':sidebarActiveColor==='info'}\" (click)=\"changeSidebarActiveColor('info')\"></span>\n                    <span class=\"badge filter badge-success\" [ngClass]=\"{'active':sidebarActiveColor==='success'}\" (click)=\"changeSidebarActiveColor('success')\"></span>\n                    <span class=\"badge filter badge-warning\" [ngClass]=\"{'active':sidebarActiveColor==='warning'}\" (click)=\"changeSidebarActiveColor('warning')\"></span>\n                    <span class=\"badge filter badge-danger active\" [ngClass]=\"{'active':sidebarActiveColor==='danger'}\" (click)=\"changeSidebarActiveColor('danger')\"></span>\n                </a>\n            </li>\n\n        </ul>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FixedPluginComponent } from './fixedplugin.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n    imports: [ RouterModule, CommonModule, NgbModule ],\n    declarations: [ FixedPluginComponent ],\n    exports: [ FixedPluginComponent ]\n})\n\nexport class FixedPluginModule {}\n","import { Component, HostBinding } from '@angular/core';\n\n@Component({\n    moduleId: module.id,\n    selector: 'footer-cmp',\n    templateUrl: 'footer.component.html'\n})\n\nexport class FooterComponent{\n    test : Date = new Date();\n}\n","<footer class=\"footer\">\n    <div class=\"container-fluid\">\n        <nav class=\"pull-left\">\n            <ul>\n\n                <li>\n                    <a href=\"https://www.creative-tim.com\">\n                        Creative Tim\n                    </a>\n                </li>\n                <li>\n                    <a href=\"http://blog.creative-tim.com\">\n                       Blog\n                    </a>\n                </li>\n                <li>\n                    <a href=\"https://www.creative-tim.com/license\">\n                        Licenses\n                    </a>\n                </li>\n            </ul>\n        </nav>\n        <div class=\"copyright pull-right\">\n            &copy; {{test | date: 'yyyy'}}, made with <i class=\"fa fa-heart heart\"></i> by <a href=\"https://www.creative-tim.com\">Creative Tim</a>\n        </div>\n    </div>\n</footer>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FooterComponent } from './footer.component';\n\n@NgModule({\n    imports: [ RouterModule, CommonModule ],\n    declarations: [ FooterComponent ],\n    exports: [ FooterComponent ]\n})\n\nexport class FooterModule {}\n","import { Component, OnInit, Renderer2, ViewChild, ElementRef } from '@angular/core';\nimport { ROUTES } from '../../sidebar/sidebar.component';\nimport { Router } from '@angular/router';\nimport { Location} from '@angular/common';\n\n@Component({\n    moduleId: module.id,\n    selector: 'navbar-cmp',\n    templateUrl: 'navbar.component.html'\n})\n\nexport class NavbarComponent implements OnInit{\n    private listTitles: any[];\n    location: Location;\n    private nativeElement: Node;\n    private toggleButton;\n    private sidebarVisible: boolean;\n\n    public isCollapsed = true;\n    @ViewChild(\"navbar-cmp\", {static: false}) button;\n\n    constructor(location:Location, private renderer : Renderer2, private element : ElementRef, private router: Router) {\n        this.location = location;\n        this.nativeElement = element.nativeElement;\n        this.sidebarVisible = false;\n    }\n\n    ngOnInit(){\n        this.listTitles = ROUTES.filter(listTitle => listTitle);\n        var navbar : HTMLElement = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName('navbar-toggle')[0];\n        this.router.events.subscribe((event) => {\n          this.sidebarClose();\n       });\n    }\n    getTitle(){\n      var titlee = this.location.prepareExternalUrl(this.location.path());\n      if(titlee.charAt(0) === '#'){\n          titlee = titlee.slice( 1 );\n      }\n      for(var item = 0; item < this.listTitles.length; item++){\n          if(this.listTitles[item].path === titlee){\n              return this.listTitles[item].title;\n          }\n      }\n      return 'Dashboard';\n    }\n    sidebarToggle() {\n        if (this.sidebarVisible === false) {\n            this.sidebarOpen();\n        } else {\n            this.sidebarClose();\n        }\n      }\n      sidebarOpen() {\n          const toggleButton = this.toggleButton;\n          const html = document.getElementsByTagName('html')[0];\n          const mainPanel =  <HTMLElement>document.getElementsByClassName('main-panel')[0];\n          setTimeout(function(){\n              toggleButton.classList.add('toggled');\n          }, 500);\n\n          html.classList.add('nav-open');\n          if (window.innerWidth < 991) {\n            mainPanel.style.position = 'fixed';\n          }\n          this.sidebarVisible = true;\n      };\n      sidebarClose() {\n          const html = document.getElementsByTagName('html')[0];\n          const mainPanel =  <HTMLElement>document.getElementsByClassName('main-panel')[0];\n          if (window.innerWidth < 991) {\n            setTimeout(function(){\n              mainPanel.style.position = '';\n            }, 500);\n          }\n          this.toggleButton.classList.remove('toggled');\n          this.sidebarVisible = false;\n          html.classList.remove('nav-open');\n      };\n      collapse(){\n        this.isCollapsed = !this.isCollapsed;\n        const navbar = document.getElementsByTagName('nav')[0];\n        console.log(33,navbar);\n        if (!this.isCollapsed) {\n          navbar.classList.remove('navbar-transparent');\n          navbar.classList.add('bg-white');\n        }else{\n          navbar.classList.add('navbar-transparent');\n          navbar.classList.remove('bg-white');\n        }\n\n      }\n\n}\n","\n<nav class=\"navbar navbar-expand-lg navbar-absolute fixed-top navbar-transparent\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-wrapper\">\n      <div class=\"navbar-toggle\">\n        <button type=\"button\" class=\"navbar-toggler\" (click)=\"sidebarToggle()\">\n          <span class=\"navbar-toggler-bar bar1\"></span>\n          <span class=\"navbar-toggler-bar bar2\"></span>\n          <span class=\"navbar-toggler-bar bar3\"></span>\n        </button>\n      </div>\n      <a class=\"navbar-brand\" href=\"javascript:void(0)\">{{getTitle()}}</a>\n    </div>\n    <button class=\"navbar-toggler\" type=\"button\" (click)=\"collapse()\"\n      [attr.aria-expanded]=\"!isCollapsed\" aria-controls=\"collapseExample\">\n      <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n      <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n      <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse justify-content-end\" id=\"collapseExample\" [ngbCollapse]=\"isCollapsed\">\n      <form>\n        <div class=\"input-group no-border\">\n          <input type=\"text\" value=\"\" class=\"form-control\" placeholder=\"Search...\">\n          <div class=\"input-group-append\">\n            <div class=\"input-group-text\">\n              <i class=\"nc-icon nc-zoom-split\"></i>\n            </div>\n          </div>\n        </div>\n      </form>\n      <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n          <a class=\"nav-link btn-magnify\" href=\"javascript:void(0)\">\n            <i class=\"nc-icon nc-layout-11\"></i>\n            <p>\n              <span class=\"d-lg-none d-md-block\">Stats</span>\n            </p>\n          </a>\n        </li>\n\n        <li class=\"nav-item btn-rotate\" ngbDropdown placement=\"bottom-left\">\n          <a class=\"nav-link\" ngbDropdownToggle id=\"navbarDropdownMenuLink\" >\n            <i class=\"nc-icon nc-bell-55\"></i>\n            <p>\n              <span class=\"d-lg-none d-md-block\">Some Actions</span>\n            </p>\n          </a>\n          <div ngbDropdownMenu aria-labelledby=\"navbarDropdownMenuLink\" class=\"dropdown-menu dropdown-menu-right\">\n            <a ngbDropdownItem href=\"javascript:void(0)\">Action</a>\n            <a ngbDropdownItem href=\"javascript:void(0)\">Another action</a>\n            <a ngbDropdownItem href=\"javascript:void(0)\">Something else here</a>\n          </div>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link btn-rotate\" href=\"javascript:void(0)\">\n            <i class=\"nc-icon nc-settings-gear-65\"></i>\n            <p>\n              <span class=\"d-lg-none d-md-block\">Account</span>\n            </p>\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { NavbarComponent } from './navbar.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n    imports: [ RouterModule, CommonModule, NgbModule ],\n    declarations: [ NavbarComponent ],\n    exports: [ NavbarComponent ]\n})\n\nexport class NavbarModule {}\n","import { Component, OnInit } from '@angular/core';\n\n\nexport interface RouteInfo {\n    path: string;\n    title: string;\n    icon: string;\n    class: string;\n}\n\nexport const ROUTES: RouteInfo[] = [\n    { path: '/dashboard',     title: 'Dashboard',         icon:'nc-bank',       class: '' },\n    // { path: '/register',         title: 'Register',             icon:'nc-single-02',    class: '' },\n    // { path: '/login',          title: 'Login',              icon:'nc-pin-3',      class: '' },\n    // { path: '/notifications', title: 'Notifications',     icon:'nc-bell-55',    class: '' },\n    { path: '/user',          title: 'User Profile',      icon:'nc-single-02',  class: '' },\n    { path: '/table',         title: 'Table List',        icon:'nc-tile-56',    class: '' },\n    { path: '/todo',    title: 'Comment Section',        icon:'nc-caps-small', class: '' },\n    // { path: '/upgrade',       title: 'Upgrade to PRO',    icon:'nc-spaceship',  class: 'active-pro' },\n];\n\nexport const LOGIN_ROUTES: RouteInfo[] = [\n    \n];\n\n@Component({\n    moduleId: module.id,\n    selector: 'sidebar-cmp',\n    templateUrl: 'sidebar.component.html',\n})\n\nexport class SidebarComponent implements OnInit {\n    public menuItems: any[];\n    ngOnInit() {\n        this.menuItems = ROUTES.filter(menuItem => menuItem);\n        console.log(\"35::\",this.menuItems); \n    }\n}\n","\n<div class=\"sidebar-wrapper\">\n  <div class=\"logo\">\n    <a href=\"http://www.creative-tim.com\" class=\"simple-text logo-mini\">\n      <div class=\"logo-image-small\">\n        <img src=\"assets/img/angular2-logo.png\">\n      </div>\n    </a>\n    <a href=\"https://www.creative-tim.com\" class=\"simple-text logo-normal\">\n      SMS\n    </a>\n  </div>\n    <ul class=\"nav\">\n        <li *ngFor=\"let menuItem of menuItems\" routerLinkActive=\"active\" class=\"{{menuItem.class}}\">\n            <a [routerLink]=\"[menuItem.path]\">\n                <i class=\"nc-icon {{menuItem.icon}}\"></i>\n                <p>{{menuItem.title}}</p>\n            </a>\n        </li>\n    </ul>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SidebarComponent } from './sidebar.component';\n\n@NgModule({\n    imports: [ RouterModule, CommonModule ],\n    declarations: [ SidebarComponent ],\n    exports: [ SidebarComponent ]\n})\n\nexport class SidebarModule {}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, AsyncValidatorFn } from '@angular/forms';\nimport { map } from 'jquery';\nimport { Observable } from 'rxjs';\nimport Users from '../app/models/users';\nimport Todo from './models/todo';\nimport { WebService } from './web.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n    readonly ROOT_URL;\n  constructor(private webService: WebService,\n              private ngbModal: MatDialog,\n              private http: HttpClient,\n              private router: Router)\n             {\n      this.ROOT_URL = \"http://localhost:3000\";\n\n              }\n\n  getUsers() {\n    return this.webService.get('users');\n  }\n\n  createUsers(\n    // fname: String,\n    // lname: String,\n    // address: String,\n    // profilepic: String,\n    // contact: Number,\n    // email: String,\n    // password: String,\n    // cpassword: String\n    formData : any\n    ) {\n        console.log(\"inside taskService\",formData);\n        this.webService.post('users',formData).subscribe((response: any) => {\n            this.router.navigateByUrl('/login');\n            console.log(\"### response = \",response);\n            return response\n        },(err) => {\n            return err.message;\n          });\n  }\n\n  updateUsers(formData : any) {\n\n    console.log(\"inside taskService update\");\n    this.webService.patch(`users/${formData._id}`, formData).subscribe((response: any) => {\n        this.router.navigateByUrl('/dashboard');\n        console.log(\"### response = \",response);\n        return response\n    },(err) => {\n        return err.message;\n      });\n\n\n\n        // console.log(\"inside taskService update\");\n        // this.webService.patch(`users/${_id}`, {fname,lname,address,profilepic,contact,email,password,cpassword}).subscribe((response: any) => {\n        //     this.router.navigateByUrl('/dashboard');\n        //     console.log(\"### response = \",response);\n        //     return response\n        // },(err) => {\n        //     return err.message;\n        //   });\n  }\n\n  deleteUsers(_id: string){\n    return this.webService.delete(`users/${_id}`);\n  }\n\n  loginUser(email:string, password:string):Observable<any> {\n    console.log(\"^^ Inside taskService Loginuser\");\n    \n    return this.webService.post('auth',{email, password});\n    \n    // this.webService.post('auth',{email, password})\n    //     .subscribe(res => {\n    //     console.log(12345,\"res in login = \",res);\n    //     console.log(12346,\"res.token = \",res.token); \n    //     localStorage.setItem(\"token\", res.token);\n    //     console.warn(\"User Logged in successfull\")\n    //     // this.router.navigateByUrl('/dashboard');\n    //     return res;\n    // },(err) => {\n    //     console.warn(\"Invalid Email or Password\",err);\n    //     return err;\n    //   });\n   \n       \n  }\n\n  getLoggedUser(): Observable<any>{\n    return this.http.get(`${this.ROOT_URL}/users/me`);\n  }\n\n  getComments(): Observable<any>{\n    console.log(\"inside taskService getComment\");\n    return this.webService.get('todo');\n  }\n\n  createComments(content: String) {\n        console.log(\"inside taskService createComment\");\n        this.webService.post('todo', {content}).subscribe((response: any) => {\n            // this.router.navigateByUrl('/login');\n            console.log(\"### response from create comment= \",response);\n            return response\n        },(err) => {\n            return err.message;\n          });\n  }\n\n  deleteComments(_id: string) {\n    console.log(\"inside taskservice deletecomment\");\n    const res = this.webService.delete(`todo/${_id}`).subscribe();\n    // return this.webService.delete(`todo/${_id}`);\n  }\n\n  updateComments(_id: String, content: String) {\n        console.log(\"inside taskService update comment\",_id);\n        this.webService.patch(`todo/${_id}`, {content}).subscribe((response: any) => {\n            // this.router.navigateByUrl('/dashboard');\n            console.log(\"### response from update comment = \",response);\n            return response\n        },(err) => {\n            return err.message;\n        });\n  }\n\n\n    /* @param data\n     * @param componentAsContent\n     * @param successCallback\n     * @param cancelCallback\n     * @param config\n     * @param finallyCallback\n     */\n    openConfirmationModal(\n        data: any,\n        componentAsContent: any,\n        successCallback?: any,\n        cancelCallback?: any,\n        config?: any,\n        finallyCallback?: any\n    ) {\n        const modalRef = this.ngbModal.open(componentAsContent, config);\n        for (const prop in data) {\n            if (data.hasOwnProperty(prop)) {\n                modalRef.componentInstance[prop] = data[prop];\n            }\n        }\n        modalRef.afterClosed().subscribe((result) => {\n            if (result instanceof Object && result.reason === \"success\") {\n                if (successCallback instanceof Function) {\n                    successCallback(result.data);\n                }\n            } else {\n                if (result === \"success\") {\n                    if (successCallback instanceof Function) {\n                        successCallback();\n                    }\n                } else if (result === \"cancel\") {\n                    if (cancelCallback instanceof Function) {\n                        cancelCallback();\n                    }\n                }\n            }\n            if (finallyCallback instanceof Function) {\n                finallyCallback();\n            }\n        }, () => {\n            if (cancelCallback instanceof Function) {\n                return cancelCallback();\n            }\n        });\n        return modalRef;\n    }\n\n}\n    \n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WebService {\n  readonly ROOT_URL;\n  constructor(private http: HttpClient) {\n    this.ROOT_URL = \"http://localhost:3000\";\n   }\n\n   get(uri: string) : Observable<any>{\n    return this.http.get(`${this.ROOT_URL}/${uri}`);\n   }\n\n    post(uri: string, payload: Object) : Observable<any>{\n    console.log(\"inside webService\",`${this.ROOT_URL}/${uri}`);\n    console.log(222,payload);\n    \n    return this.http.post(`${this.ROOT_URL}/${uri}`, payload);\n   }\n\n   patch(uri: string, payload: Object){\n    return this.http.patch(`${this.ROOT_URL}/${uri}`, payload);\n   }\n\n   delete(uri: string){\n    console.log((\"inside webservice delete\"));\n    return this.http.delete(`${this.ROOT_URL}/${uri}`);\n   }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as _ from 'lodash';\n// import Users from 'app/models/users';\n// import { FormControl, FormGroup, Validators } from '@angular/forms';\n// import { LoginComponent } from 'app/pages/login/login.component';\n\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\n\n\nexport class WelcomeComponent implements OnInit {\n  text = 'welcome page'\n  // userData: Users[] = [];\n\n  constructor(private router: Router) { \n              }\n\n  ngOnInit(): void {\n    console.log(10,\"inside welcome component\");\n    \n  }\n\n  login(){\n    this.router.navigateByUrl('/login');\n  }\n\n  register(){\n    this.router.navigateByUrl('/register');\n  }\n}\n","<div class=\"row flex-center text-center\">\n    <div class=\"col-md-8\">\n      <div class=\"card card-user\">\n        <div class=\"card-header\">\n          <h5 class=\"card-title\">Welcome User</h5>\n        </div>\n        <div class=\"card-body\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                  <div class=\"form-group\">\n                    <!-- <button mat-raised-button color=\"warn\" (click)=\"login()\">Log In</button> -->\n                    <button type=\"submit\" class=\"btn btn-primary btn-round\" (click)=\"login()\">Login</button>\n                  </div>\n                </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    New user \n                    <div>\n                        <!-- <button mat-raised-button color=\"warn\" (click)=\"register()\">Sign Up</button> -->\n                        <button type=\"submit\" class=\"btn btn-primary btn-round register\" (click)=\"register()\">Sign Up</button>\n                    </div>\n                </div>\n              </div>\n            </div>\n        </div>\n      </div>\n    </div>\n</div>\n\n\n\n<!-- <div class=\"row\">\n    <div class=\"col-md-5\">\n        <div class=\"card text-center\">\n            <div class=\"card-header\">\n                <h5 class=\"card-title\">Login</h5>\n            </div>\n            <div class=\"card-body\">\n                <div class=\"row\">\n                    <div class=\"col-md-6 pr-1\">\n                        <div class=\"form-group\">\n                            <button mat-raised-button color=\"warn\" (click)=\"login()\">Log In</button>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6 pl-1\">\n                        <div class=\"form-group\">\n                            New user <button mat-raised-button color=\"warn\" (click)=\"register()\">Sign Up</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div> -->\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","/*!\n\n=========================================================\n* Paper Dashboard Angular - v2.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/paper-dashboard-angular\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/paper-dashboard-angular/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"names":[],"sourceRoot":"webpack:///"}